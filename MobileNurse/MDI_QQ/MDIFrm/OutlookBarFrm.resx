<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>6, 11</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADq
        DwAAAk1TRnQBSQFMAgEBAgEAAQUBAAEEAQABIAEAASABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABgAMAASADAAEBAQABCAYAARAYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/yoAAa4FZgGGAacBtVAA
        AbUBzxm1Ac8BtQcAAbUBzwGuAWYFCgFfAYUBhgPPAQdKAAK1Ac8BpxnPAacBzwG1AgABBwO1AacBhQFf
        AQoFAAEKAl8BBAGFAaEBzwK1SAACoQGnAc8D8BO8A/ABzwKnAgABzwOhAYUBXwoAAQoBXwOhAadIAASn
        GrUCzwIAAc8BhQNfAQoLAAEKAl8BBAGFAacBtUYAAbQBswKtF88BrgHPA7UBAAG1AYYBXwMKAgACDgEP
        BhADDwEOAQoBXwGFAacBtUUAAbQCswG0DrUItAHPAa4BhgS1AYYBXwEKBQABEAEVARIGbQHqARIBFAEQ
        AQ4BCgFfAYUBpwG1RAABrQGzAbkB3A8ZBuEB3AG7AbQBhgO1AaEBXwEKBgABFAH4AfcHBwH3AewBFAEO
        AgABXwGFAadEAAGtAbMBuQHcDRkBCQPcBdsBugG0AYYDtQFfAQoDAAFDARICbQESARMBEgJtAesB7QEH
        Ae0B6wESBRQBZgEEAYUBpwG1QgABrQGzAboB3AQZAvMBGQPzAxkBCQPcAdsE2gG5AbMBhgO1AQoCAAEO
        ARAB6gH4AuwBbQESARMBEgJmAesB7wH4AeoBEwEUAW0C6wHqARUBCgFfAYUBpwG1QQABrQG0AbsBCQQZ
        AfMD9APzAhkCCQLcAdsE2gG5AbMBhgO1AV8BCgEOAUMFbQHrA+wDhgGuAfgD7AL3AewBFAEQAQ4BCgFf
        AYUBpwG1QAABrQG6AQkDGQH0CP8B9AHiAxkB4QHbBNoBuQGzAYYDtQGhAV8BEQFtAQcBbQEQAgAB7AHx
        Av8B1gGnAaEBBAG1AfID/wHxAewFAAFfAYUBp0AAAa0BugG7Ae4DHAiZARoB9AHiAxkB3ALbAtoBuQGz
        AYYDtQNfAWYBbQFDARABFAHsAQcB8gHdAdYBpwGhAYUBBAGGAbUBvAL/AfMBBwHsARQBDgIAAQoBXwGG
        QAABrQG7Ae4B7wNRB1IBdAGZAf8EGQHcAroBuQHaAbkBswGGA7UBCgFfAQQBXwIQARMB7AHxAfIB3QHW
        AacBoQGFAwQBhgG1AfIC9AHzAfEBbQEQAgABCgFfAYZAAAGtAgkBBwFzAksBTANSA0sBdAGZAf8BGQMJ
        A7QBswHaArMBhgO1AWYCXwEKAQABFAHsAQcB/wHdAdYBpwGhAYUFBAGGAbUB8AH0Av8B7AFDAgABCgFm
        Aa5AAAGtAgkBvAHvAXMGUgFLAXMBHAHwAf8BBwG0Bq0DswGGA7UBAAFmAQoCAAHsAfEC/wHWAacBoQkE
        AbUB8gL/AewBQwIAAV8BrkEAAa0BCQHdAfABBwFzAlICWAJSAUUBcwEHAfIB/wEZAQkBuwG1AbsBtQG0
        AbMB2wKzAYYDtQEAAWYBCgIAARQB7AEHAf8B1gGnAaEFBAGGAacBhgEEAbUB8AEHAewBbQEUARABAAFf
        Aa5BAAGtAQkB3QHxAQcBcwJSA1gBUgFFAXMB7gHzAf8CGQEJAQcCCQG1AbMB2wG5AbMBhgO1AQABZgEK
        AgABDgEUAewB8QHPAacBhQUEAc8BtQGuAV8BrgH3Ae0BFAESARMBFQEKAQQBz0EAAa0BCQHxAfAB7wFz
        A1IBWAFSAUsBRAFzAe4B8wH/ARkBCQG7AbUBuwG1AbQBswHbArMBhgO1AQABhgFfAQoCAAEOARQB7AGG
        BwQBtQEHAe0BCgFmAm0DFAEVAV8BhgG1QQABrQEJAfIBvAEcAVEBUgJMAlIBSwEjAXMBBwHyAf8BBwG0
        Bq0DswGGA7UBAAGnAYUBXwYAAgoFBAG1AQcB7AIAAQ4BFAHsARQBDwFfAaEBtUIAAa0BCQHzAfIBvAF0
        AVIDTAJLAUQBkgHwAfQB/wEZAQkBuwG1AbsBtQG0AbMB2wKzAYYDtQEAAYYBBAJfAQoBDwFDAW0BQwEO
        BgoBEwHqARQBAAFDAhIBFAFmAQQBhQGhAbVCAAGtAQkC9AHzAZkBdAJSBEsB7wHyAv8B9QIZAfEBGQIJ
        AbkB2wG5AbMBhgO1AQABhgEEAV8BBAFfAREBEwHsARIBQwYRAhUBQwEOARMBbQESAQ8BBAGGAs8BB0IA
        Aa0BCQH0Av8BGgOZAZMDHAG8AfQF/wH0AhkB3ALbAbkBswGGBLUBhgEEBF8BZgptAeoBEgEUAhIBZgFf
        AYYBtUUAAa0BtQHyEf8B9AIZAdwC2wG5AbMBhgO1AqEBhQFfAQABXwEEAV8BAAFtAfcIBwH3AewBFAEP
        AV8BoQG1RgABrQG1AfEB9A//AfQCGQEJAdwC2gG5AbMBhgKnAc8BXwGFAaEBhQVfAWYB6gdtAeoBrgKG
        AQQBhQGhAbVGAAGzAbUB7gHxDvQDGQIJAboCuQKzAqcBzwG1AQoBBAKFAQQBXwFmAQQBhQEEAWYHEQFm
        AYYBpwbPAq4BzwG1QQABtAK1AbsRCQG1ArQEswHPAacBtQEAAWYEXwJmAYYBoQGFAQQFXwNmAYUBoQHP
        A7UBhgEEAl8BhQHPQQAB1gG0AbMSrQWnAa0BtAG1AacBtQIAAWYBCgIAARQB6gGGB6EBpwIAAc8GoQFf
        AQoCAAFfAa5BAAHIHacBzwIAAYYBXwEKAQABEAJDBV8DhgGnAbUBzwGnAoYDXwMKAV8BhQHPQQAB1hy1
        Ac8BtQIAAbUBhgFfAQoBDgIPBQoCZgGGAYUDhgHqAWYBEAEOAQ8CCgFfAYUBpwG1YwABtQGGAmYBEQEK
        BQABEAFDAWYDXwEVARQBEAEPARABFAERAWYBhgGnAbVoAAGuAV8OAAEOARQB7AGGAbVFAAFCAU0BPgcA
        AT4DAAEoAwABgAMAASADAAEBAQABAQYAAQIWAAP/AQAF/wGAAT8B/wgAAcACAAEBAfwBAAEDAf8MAAHA
        AgAB/wwAAcACAAH/DAABwAIAAT8MAAGAAgABHw8AAQ8PAAEPDwABAw8AAQFcAAGAAgABAQwAAYACAAEB
        DAABgAIAAQEMAAGAAgABAQwAAYACAAEDDAABgAIAAQMMAAGAAgABAw8AAR8PAAE/DwABPw8AAQELAAEB
        AwABAQsAAQEBgAEAAcABAQsAAQEBgAIAAQELAAEBAYACAAEBCAAE/wHAAgABAwgABP8B/AIAAR8IAAs=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>34</value>
  </metadata>
</root>