<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACN0RVh0VGl0
        bGUAQ2FuY2VsO1N0b3A7RXhpdDtCYXJzO1JpYmJvbjtMlpayAAADmklEQVQ4TyWTf1CTdRzHvwim2KS6
        0k5iXWAbIg6GbG2gHmPGhMEs+CMsT70yE1BGx3F5kCReFE7uNAMu7og6MBFk/LCEOZ15WUkXw8aAcgsE
        +SHC9mzABtuR3rvv8/C9ez33vs/n834/3+9zz5d4TK3Ec7uDeO9cJXQF/pZ7RGQrKqh6cKLQMl5c9ISF
        1X8XamsMHxwU05kgSoDHpCcLxhZCA/SsMYCy2qrNKx799BP/7Ldfw93eAM/tTngp7vZGzNRXYezkCb/5
        2NFSOruWsooLoCtAK5fxho7nmcYryuC51Y757ouY66iHq6UGruYauNvqMPdTI+jLMHH2cwwcz/1FEyl8
        gQ1hA4LMHx7+ZrS8lBovwVKUj7pwEYyZmXA2noOz4RxuZmVxNUvhMS5o7Msy/HH4/cvUu5Z0ZmVKrbk5
        Txj9d7hXkIMG1TswdZvRnFOCbnUGDOkaTpu6ermeOf8juK7UwZqf97Q+NTWJmDI0tSNfnMTj2grU8aPw
        wD4Fh2sJ9lEGLdrTHPepnnZ6MWyb4mamq8sxcroEhrR0Pbm5Rz1sP/ouRrT7cUPzFv7UnYd36T84532w
        PWRgG2MwO+fDwuIy1zNq9mI4Lxu2I9m4oUp7SK4rVMv/ZKdg6O0dsB+iW969Gz26C5hx+zBDd/LYTWF8
        +L3iKxiUStw/kIbBjAQMZiXBoEhZJlflScuW1DcwoJZhaG8irkm2w3jqLN3yEh45FzHl8FKWcL1Uh2vx
        2zGQLod1jxT9KglYL2kSy8d6lSuFrthtaPu4DAP/OjA56wWz4AMz78f4jBf99lnoC06hKyYaljfj0KsQ
        oylWNkVqheLvTTtksCjFuBQuhHPaiUnHIlwLfvRfqOZYCfHA8cjJzfyVFIOfEyWoFsR2kqLQiF0Xo+Ke
        mnduw12lHLcOHIKfYXBPVwmjLJ4i4TRbY3t3k2XoS4zGD1vEyH/5NTX7IwVXviK8fCVyKyzJsehJlqJV
        GAmTLI5+Fzl3ZlaztR6FFBZFDPSRUTizScBenvVswKqta9ZtqNy4ua8pQgDzLhE1JaA/RYK+hCjKFnrm
        eAyqE9C3U4TmzQKc2RhhFa15lk+9gWSi4D02JDD+Gd6msuf4LVUbwtEuiMAd8evoldJAyq9Ud9BaNe19
        9jz/x+jVwa9ST9C4dh8h7IMTKxeDd3DdS6oSXmhreUjYhC6ED11IGMrXh00W80Lb9ge/qKEzIZTAFd8+
        8j91kUbX3K/WKgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACF0RVh0VGl0
        bGUAQXBwbHk7T0s7Q2hlY2s7QmFycztSaWJib247ZGPIaAAAA6ZJREFUOE9Nk31Q03Ucx3+iqwzOhE6t
        MxsDOcbDhgPtziPoCGXkJIq6FQsn0WSOjRKIpzTmgRMfuKwpA2zLjFUzIPAIXCDIIiYPTWyDxThQntp4
        iAeBjP569/3Nuut397r73X0/79fn87n7fqnJlQZq7qGJIt86wvqMC+yYXG2o7ng1p19pCFtQfsvtP6Hn
        NGSVBwvJ+WMEj/m/zJTrzxvU1Eo9RblWje5wUhZrW6Y6yFhasw+tVhXsTgPmVrswNFMD09BZqJsFKPgy
        tE9U6BdIN5p9eOuRgA4L0pnPZHwaPGwwHcPkchOGlyoxMK/Cnblc2BfPYHRZC9dqCxotBcjXcWeT8/24
        JOcxsVznFmx47zS7qc5cAMfCZXT8fgSdLgnMLhm6p+XomVGgZ1aOZrsYv81XoNV2GorPQqzbd3p60c2p
        pGw//nFtLOx/lKPlvghtE2LcmnoXJqcEXU4pbk9LUXR1Lw5kMiE5z4ZjsRJltQk4VBSQSTen3v4ooKah
        Ox83x9JwY1RIJMloG09BOxGZpg5DWsZG3icyjIw7wZdvww9Dh9E2WII0VaCZCDZSwkL/kXZHAa4PJ0Hd
        EoUY2UbkacNgvPcWcqo4KNLkwDW7BMWZRFxuFeHHe+/g9oQSaaXsNSLwot7M8182OtJhsMUhRuqJPqsV
        +RcyECv3docnpx/g/FfZUH0TR6YTo95xED9NyJF6KhAhkd7PUq9l+97X9wpgsO6DujERGcWvwjmzhKbO
        DoxOLmJg9A4Sc7fDOJKK2qF4fGfno3bgdYg+DqAn2EQlKFjNZY1RuGLZi2uDAhRXx6K4QoaFB2tYWPkb
        h5R7cPVnIQyDsdDboqH/9UWU34zBGzksCxF4Ui+Ld4jTz3HxhSUSFb27cM0mQFb5bujqS2Hqv47Uc/5k
        vf240v8CPrdEoPpuNI5d4oEveV5JBI8TqCcFct+7J77moqo3AppuLlnnIFJKfBEppaBp34+qPh4qCdpf
        dqOkjofED1g2Lx/G0yTrQQvWR8Rv5SVk+s1/qAsigjBoerhkTyGaho9CRybT9Owi8nAU6kOQlOO/Fh63
        JYrkGJ0T71OUaVxGSxjh8Vv3HJD5jqSc3Imi2iCou0JxqZuDi2YOTn4fjFRVAF45yhzgPQrTo69zZzvG
        JLSAfokbyFg+0cnPFcZJmGaBnAU3Chb4R5jWl0Q7Tnk+xdhC6hh0PZ1zZ//7+VdE70Tb6Xu+meBD8CZs
        IjxB8Ph/fceYhPoHAkQRj5PgdPMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAB0AwAAtAIAAM0AAAD2AAAAvJkAAM1bAADVtQAA+vUAAOcAAAD/0RYAigEAAPTmAACwOgAA//neALRv
        AAD/3VMAs1AAANSdAACLLgAAl1MAAOOxAADp2AAA0IwAAObHAAC8HAAA/4cAAPLdAAC4iQAA//8AAP/M
        AAD/AAAA////AAAAAAAgDQ8JHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dCQ8NIA0JHR0dHR0dHR0dHR0d
        HR0dHR0dHR0dHR0dHR0dHQkNDx0ZHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4ZHQ8JHR4eAwgICAgI
        CAgDHh4eHh4DAwgICAgICAgIAx4dCR0dHgMIAgEBAQEBAggDHh4eHgMCAgEBAQEBAQIIAx0dHR0DCAIK
        AAAAAAoBCB4eAwMIAgEKCgAAAAAKAQgeHR0dHQMFEREEBAQEBAUIAwgCAhgWEREEBAQEBAQQCB4dHR0d
        AxgHHBwcHBwVGAgCAQoKChILHBwcHBwcBxgDHh0dHR0eCA4cHBwcHBMCAgoTDhMAABIHHBwcHBwOAh4e
        HR0dHR4DARocHBwHAAIYFRwcHAcbAA4cHBwcFQEDHh4dHR0dHh4IEBwcHBUAARccHBwcHBwGAAscHBwQ
        CB4eHh0dHR0eHgMCFBwcCwAMHBwcHBwcHBsGGxwcBgEDHh4eHR0dHR4eHgMYHBwHAA4cHBwcHBwcGxYR
        HAcSCB4eHh4dHR0dHh4eHgIWHBwTDhwcHBwcHBwGEgccFgIeHh4eHh0dHR0eHh4eAwELGgYTHBwcHBwc
        HBcKFwsBAx4eHh4eHR0dHR4eHh4eCAUUFxAHHBwcHBwcEQERBQgeHh4eHh4dHR0dHh4eHh4DAhcMFRUc
        HBwcHBwQAgUIAx4eHh4eHh0dHR0eHh4eHh4IDBYMCxwcHBwcFAIDAwMeHh4eHh4eHR0dHR4eHh4eHh4C
        FAwKGwscGhYBCB4eHh4eHh4eHh4dHR0dHh4eHh4eHgMYCxIKAAoKAQIIAx4eHh4eHh4eHh0dHR0eHh4e
        Hh4eHggWBxAAAAoKAQIDHh4eHh4eHh4eHR0dHR4eHh4eHh4eAwELHAYTEhIOAh4eHh4eHh4eHh4dHR0d
        Hh4eHh4eHh4eCAUcHBwcHBAIHh4eHh4eHh4eHh0dHR0eHh4eHh4eHh4DAhccHBwXAQMeHh4eHh4eHh4e
        HR0dHR4eHh4eHh4eHh4IDBwcHAwIHh4eHh4eHh4eHh4dHR0dHh4eHh4eHh4eHh4CERwRAh4eHh4eHh4e
        Hh4eHh0dHR0eHh4eHh4eHh4eHgMYCxgDHh4eHh4eHh4eHh4eHR0dHR4eHh4eHh4eHh4eHggYCB4eHh4e
        Hh4eHh4eIA0PCR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHQkPDSANCR0dHR0dHR0dHR0dHR0dHR0dHR0d
        HR0dHR0dHR0JDQ8dGR4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eGR0PCR0eHgMICAgICAgIAx4eHh4e
        AwMICAgICAgICAMeHQkdHR4DCAIBAQEBAQIIAx4eHh4DAgIBAQEBAQECCAMdHR0dAwgCCgAAAAAKAQge
        HgMDCAIBCgoAAAAACgEIHh0dHR0DBRERBAQEBAQFCAMIAgIYFhERBAQEBAQEEAgeHR0dHQMYBxwcHBwc
        FRgIAgEKCgoSCxwcHBwcHAcYAx4dHR0dHggOHBwcHBwTAgIKEw4TAAASBxwcHBwcDgIeHh0dHR0eAwEa
        HBwcBwACGBUcHBwHGwAOHBwcHBUBAx4eHR0dHR4eCBAcHBwVAAEXHBwcHBwcBgALHBwcEAgeHh4dHR0d
        Hh4DAhQcHAsADBwcHBwcHBwbBhscHAYBAx4eHh0dHR0eHh4DGBwcBwAOHBwcHBwcHBsWERwHEggeHh4e
        HR0dHR4eHh4CFhwcEw4cHBwcHBwcBhIHHBYCHh4eHh4dHR0dHh4eHgMBCxoGExwcHBwcHBwXChcLAQMe
        Hh4eHh0dHR0eHh4eHggFFBcQBxwcHBwcHBEBEQUIHh4eHh4eHR0dHR4eHh4eAwIXDBUVHBwcHBwcEAIF
        CAMeHh4eHh4dHR0dHh4eHh4eCAwWDAscHBwcHBQCAwMDHh4eHh4eHh0dHR0eHh4eHh4eAhQMChsLHBoW
        AQgeHh4eHh4eHh4eHR0dHR4eHh4eHh4DGAsSCgAKCgECCAMeHh4eHh4eHh4dHR0dHh4eHh4eHh4IFgcQ
        AAAKCgECAx4eHh4eHh4eHh0dHR0eHh4eHh4eHgMBCxwGExISDgIeHh4eHh4eHh4eHR0dHR4eHh4eHh4e
        HggFHBwcHBwQCB4eHh4eHh4eHh4dHR0dHh4eHh4eHh4eAwIXHBwcFwEDHh4eHh4eHh4eHh0dHR0eHh4e
        Hh4eHh4eCAwcHBwMCB4eHh4eHh4eHh4eHR0dHR4eHh4eHh4eHh4eAhEcEQIeHh4eHh4eHh4eHh4dHR0d
        Hh4eHh4eHh4eHh4DGAsYAx4eHh4eHh4eHh4eHh0dHR0eHh4eHh4eHh4eHh4IGAgeHh4eHh4eHh4eHh4e
        HR0JHR4eHh4eHh4eHh4eHh4DHh4eHh4eHh4eHh4eHh4dCQ8dGR4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
        Hh4eGR0PDQkdHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dCQ0gDQ8JHR0dHR0dHR0dHR0dHR0dHR0d
        HR0dHR0dCQ8NIIAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>